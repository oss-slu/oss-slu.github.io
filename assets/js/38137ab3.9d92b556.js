"use strict";(self.webpackChunkopen_source_with_slu=self.webpackChunkopen_source_with_slu||[]).push([[9947],{77:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var r=i(4848),s=i(8453);const l={id:"about",title:"eARM HPC Workflow Deployment",custom_edit_url:null},t=void 0,o={id:"projects/earm_pipeline/about",title:"eARM HPC Workflow Deployment",description:"Overview",source:"@site/docs/projects/earm_pipeline/about.md",sourceDirName:"projects/earm_pipeline",slug:"/projects/earm_pipeline/about",permalink:"/projects/earm_pipeline/about",draft:!1,unlisted:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"about",title:"eARM HPC Workflow Deployment",custom_edit_url:null},sidebar:"portfolioSidebar",previous:{title:"Drone World",permalink:"/projects/droneworld/about"},next:{title:"ESP: Electronic Structure Parser",permalink:"/projects/esp/about"}},c={},d=[{value:"Overview",id:"overview",level:2},{value:"Information",id:"information",level:2},{value:"Technical Information",id:"technical-information",level:2},{value:"Workflow Summary",id:"workflow-summary",level:3},{value:"Development Priorities",id:"development-priorities",level:3},{value:"Get Involved",id:"get-involved",level:2}];function a(e){const n={a:"a",br:"br",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["Standing up the ",(0,r.jsx)(n.strong,{children:"eARM molecular modeling workflow"})," on SLU\u2019s HPC cluster.",(0,r.jsx)(n.br,{}),"\n","The eARM pipeline is a computational framework that screens rhodopsin-like photoreceptors for fluorescent mutants.",(0,r.jsx)(n.br,{}),"\n","It chains together multiple molecular modeling and simulation tools, all coordinated by ",(0,r.jsx)(n.strong,{children:"pyARM"}),", and runs them on the HPC system with SLURM job scheduling and cron automation."]}),"\n",(0,r.jsx)(n.h2,{id:"information",children:"Information"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Source Code:"})," -",(0,r.jsx)(n.a,{href:"https://github.com/oss-slu/earm_pipeline",children:"https://github.com/oss-slu/earm_pipeline"})," ",(0,r.jsx)(n.a,{href:"https://github.com/oss-slu/earm_pipeline",children:(0,r.jsx)("img",{src:"/img/git-alt.svg",alt:"git",width:"25",height:"25"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Client:"})," eARM Scientific Community"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Current Tech Lead:"})," Vani Walvekar ",(0,r.jsx)(n.a,{href:"https://github.com/vani-walvekar1494",children:(0,r.jsx)("img",{src:"/img/github.svg",alt:"github",width:"25",height:"25"})})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Developers:"})," Collaborators at SLU HPC team, with support from Filippo and Massimo"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Start Date:"})," Aug, 2025"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Technologies Used:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Python (pyARM framework)"}),"\n",(0,r.jsx)(n.li,{children:"Modeller, pdb2pqr, Dowser, FPocket, VMD, GROMACS"}),"\n",(0,r.jsx)(n.li,{children:"Molcas + Tinker (QM/MM calculations)"}),"\n",(0,r.jsx)(n.li,{children:"Conda environments"}),"\n",(0,r.jsx)(n.li,{children:"SLURM job scheduler"}),"\n",(0,r.jsx)(n.li,{children:"Crontab automation"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Type:"})," Scientific Workflow / HPC Deployment"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"License:"})," MIT (",(0,r.jsx)(n.a,{href:"https://opensource.org/license/mit",children:"https://opensource.org/license/mit"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"technical-information",children:"Technical Information"}),"\n",(0,r.jsx)(n.h3,{id:"workflow-summary",children:"Workflow Summary"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Protein Preparation"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.em,{children:"Modeller"})," to complete missing structure pieces."]}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.em,{children:"pdb2pqr"})," to set charges and protonation states."]}),"\n",(0,r.jsxs)(n.li,{children:["Add water molecules with ",(0,r.jsx)(n.em,{children:"Dowser"})," and detect cavities with ",(0,r.jsx)(n.em,{children:"FPocket"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Mutation Setup"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Generate mutant proteins with ",(0,r.jsx)(n.em,{children:"pyARM"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Molecular Dynamics (MD)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Simulate protein motion with ",(0,r.jsx)(n.em,{children:"GROMACS"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"QM/MM Calculations"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Extract snapshots and compute fluorescence properties with ",(0,r.jsx)(n.em,{children:"Molcas"})," (with Tinker)."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Analysis & Ranking"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"pyARM ranks mutants based on predicted fluorescence and stability."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Automation on HPC"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["All steps are scheduled with ",(0,r.jsx)(n.em,{children:"SLURM"})," and chained with ",(0,r.jsx)(n.em,{children:"crontab"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Enables running many mutants in parallel on the cluster."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"development-priorities",children:"Development Priorities"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Configure and deploy ",(0,r.jsx)(n.strong,{children:"pyARM-based workflows"})," on SLU\u2019s HPC cluster."]}),"\n",(0,r.jsx)(n.li,{children:"Install and manage dependencies (GROMACS, Molcas, Modeller, pdb2pqr, Dowser)."}),"\n",(0,r.jsx)(n.li,{children:"Automate job execution with SLURM + cron."}),"\n",(0,r.jsx)(n.li,{children:"Provide reproducible modulefiles and configuration for cluster users."}),"\n",(0,r.jsx)(n.li,{children:"Deliver working demonstrations and documentation for collaborators."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"get-involved",children:"Get Involved"}),"\n",(0,r.jsxs)(n.p,{children:["If you would like to contribute to this project, please visit our ",(0,r.jsx)(n.a,{href:"https://github.com/oss-slu/earm_pipeline",children:"GitHub page"})," to create your own issues or pull requests."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var r=i(6540);const s={},l=r.createContext(s);function t(e){const n=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);